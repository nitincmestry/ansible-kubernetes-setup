---
- name: Initialize control plane (if not done)
  shell: |
    kubeadm init --pod-network-cidr={{ pod_network_cidr }} --kubernetes-version=v{{ kubernetes_version }} -v 2
  args:
    creates: /etc/kubernetes/admin.conf
  register: kubeadm_init
  failed_when: kubeadm_init.rc != 0 and 'already initialized' not in (kubeadm_init.stderr | default('')) 

- name: Ensure kubeconfig for root (so kubectl works)
  when: ansible_facts['distribution'] is defined
  shell: |
    mkdir -p $HOME/.kube
    cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
    chown $(id -u):$(id -g) $HOME/.kube/config
  args:
    creates: $HOME/.kube/config

- name: Create join script from kubeadm init output OR token create (idempotent)
  block:
    - name: Try to extract join command from kubeadm init stdout
      set_fact:
        raw_join_cmd: "{{ (kubeadm_init.stdout_lines | select('search', 'kubeadm join') | list) | first | default('') }}"
      when: kubeadm_init is defined

    - name: If join command not found, create a join command using token (ensures valid token)
      shell: |
        kubeadm token create --print-join-command
      register: printed_join
      when: raw_join_cmd == '' or raw_join_cmd is none

    - name: Set join_cmd fact
      set_fact:
        join_cmd: "{{ (raw_join_cmd | default('')) | default(printed_join.stdout) }}"

    - name: Build runnable join script (force --ignore-preflight-errors=all to avoid flakiness)
      copy:
        dest: /tmp/kube_join_cmd.sh
        content: |
          #!/bin/bash
          set -e
          {{ join_cmd }} --ignore-preflight-errors=all
        mode: '0755'
  when: kubeadm_init is defined or not (always ensure script exists)
