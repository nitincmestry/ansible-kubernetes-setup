---
- name: Pre-flight & system update (run BEFORE adding custom repos)
  hosts: all
  become: yes
  tasks:
    - name: Ensure python3 is present (ansible python)
      package:
        name: python3
        state: present

    - name: Update OS packages (disable kubernetes repo if present)
      ansible.builtin.command: dnf --disablerepo=kubernetes -y update
      args:
        warn: false

    - name: Reboot if kernel updated (safe check)
      register: kernel_update
      shell: |
        if [ -f /var/run/reboot-required ]; then echo "reboot-required"; fi
      changed_when: false
      check_mode: no

- name: Apply base system settings (swap/sysctl/modules)
  hosts: all
  become: yes
  roles: []

  tasks:
    - name: Disable swap immediately
      ansible.builtin.command: swapoff -a
      ignore_errors: yes

    - name: Disable swap in fstab
      ansible.builtin.replace:
        path: /etc/fstab
        regexp: '(^.*\sswap\s.*$)'
        replace: '# \1'
      ignore_errors: yes

    - name: Ensure required kernel modules are loaded at boot
      ansible.builtin.copy:
        dest: /etc/modules-load.d/k8s.conf
        content: |
          overlay
          br_netfilter
        mode: '0644'

    - name: Configure sysctl for Kubernetes
      ansible.builtin.copy:
        dest: /etc/sysctl.d/99-k8s.conf
        content: |
          net.bridge.bridge-nf-call-iptables = 1
          net.bridge.bridge-nf-call-ip6tables = 1
          net.ipv4.ip_forward = 1
        mode: '0644'

    - name: Apply sysctl
      ansible.builtin.command: sysctl --system

- name: Install containerd and Kubernetes packages
  hosts: all
  become: yes
  roles: []

  tasks:
    - name: Include containerd tasks
      import_tasks: roles/containerd/tasks/main.yml

    - name: Include kubernetes tasks
      import_tasks: roles/kubernetes/tasks/main.yml

- name: Initialize master and capture join command
  hosts: masters
  become: yes
  tasks:
    - name: Initialize control plane if not already initialized
      import_tasks: roles/master-init/tasks/main.yml

- name: Join workers to control plane
  hosts: workers
  become: yes
  tasks:
    - name: Wait for join command to be available on masters
      wait_for:
        path: /tmp/kube_join_cmd.sh
        state: present
        timeout: 300
      delegate_to: "{{ groups['masters'][0] }}"
      run_once: true

    - name: Copy join script from master to worker
      fetch:
        src: /tmp/kube_join_cmd.sh
        dest: /tmp/kube_join_cmd.sh
        flat: yes
      delegate_to: "{{ groups['masters'][0] }}"
      run_once: true

    - name: Run kubeadm join on worker
      shell: bash /tmp/kube_join_cmd.sh
      args:
        creates: /etc/kubernetes/kubelet.conf

- name: Deploy CNI on master
  hosts: masters
  become: yes
  tasks:
    - name: Deploy Flannel CNI
      import_tasks: roles/cni/tasks/main.yml
